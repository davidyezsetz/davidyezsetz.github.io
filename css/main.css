/*! normalize.css v7.0.0 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,footer,header,nav,section{display:block}h1{font-size:2em;margin:.67em 0}figcaption,figure,main{display:block}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}button,html [type=button],[type=reset],[type=submit]{-webkit-appearance:button}button::-moz-focus-inner,[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details,menu{display:block}summary{display:list-item}canvas{display:inline-block}template{display:none}[hidden]{display:none}body{background:#fff}img,svg{max-width:100%}ul{margin:0;padding:0;list-style:none}.site-header{margin-bottom:30px;padding-top:20px}.site-header__logo{margin:0 auto 20px;width:60px}.site-logo{fill:#1f6610;fill-rule:evenodd;transition:all .2s ease-in-out}.site-logo:hover{filter:drop-shadow(1px 1px 1px rgba(0,0,0,.3))}.site-footer{border-top:1px solid #cbcbcb;background:#e4e4e4}.site-wrapper{max-width:1024px;margin-left:auto;margin-right:auto}.content-section{margin-bottom:60px}.content-wrapper{padding:0 30px}body{color:#7c7c7c;font-family:Helvetica Neue,Helvetica,Arial,Lucida Grande,sans-serif}h1,h2,h3,h4,h5,h6{margin:0 0 30px;color:#1f6610;font-weight:700}p{margin:0 0 20px;max-width:800px}a{position:relative;color:#1f6610;text-decoration:none;transition:color .2s ease-in-out}a:before{position:absolute;bottom:-2px;left:-2px;z-index:-1;width:calc(100% + 4px);height:0;background:#1f6610;transition:height .2s ease-in-out;content:""}a:hover{color:#fff}a:hover:before{height:calc(100% + 4px)}strong{font-weight:700}.button{display:block;border:1px solid #fff;background:#1f6610;color:#fff;padding:15px 40px;margin-bottom:20px;cursor:pointer;width:200px;transition:all .2s ease-in-out;outline:0}.button:hover{border-color:#1f6610;background:#fff;color:#1f6610}.button:last-child{margin:0}.main-nav{display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center}.main-nav__wrapper{-ms-flex:1;flex:1}.main-nav__entry{margin-right:20px}.main-nav__entry:last-child{margin-right:0}.main-nav__link{font-size:20px}.social-nav{display:-ms-flexbox;display:flex}.social-nav__entry{margin-right:20px;line-height:40px}.social-nav__entry:last-child{margin-right:0}.intro{display:-ms-flexbox;display:flex}.intro__visual{-ms-flex:1;flex:1;margin-right:30px}.intro__copy{-ms-flex:2;flex:2}.tech-chart{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap}.tech-chart__nav{display:-ms-flexbox;display:flex;-ms-flex-flow:column;flex-flow:column}@media all and (max-width:650px){.tech-chart__nav{margin:0 auto 30px;height:36px;overflow:hidden;transition:height .2s ease-in-out}.tech-chart__nav--active{height:392px}}.tech-chart__chart{-ms-flex-positive:1;flex-grow:1;min-width:375px;max-width:550px}@media all and (min-width:651px){.tech-chart__chart{margin-left:60px}}.tech-chart .button{padding-top:0;padding-bottom:0;height:10%;min-height:36px;max-height:50px;-ms-flex-order:2;order:2}.tech-chart .button--active{-ms-flex-order:1;order:1}.work-xp{max-width:500px}.work-xp__entry{padding-left:20px;line-height:40px}@media all and (max-width:650px){.hidden-on-s{display:none}}@media all and (min-width:651px){.visible-on-s{display:none}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
